#include "Linear2Gamma.hlsl"

#pragma kernel Shake2

RWTexture2D<float4> outputTexture;
Texture2D<float4> inputTexture;

float time;
float frequency;
float shakeIntensity;

[numthreads(8, 8, 1)]
void Shake2(uint3 id : SV_DispatchThreadID) {
    uint textureWidth, textureHeight;
    inputTexture.GetDimensions(textureWidth, textureHeight);

    float2 uv = float2(id.x, id.y) / float2(textureWidth, textureHeight);

    const float shakeScalingFactor = 0.1;
    float xShake = sin(time * frequency * 3.14159) * (shakeIntensity * shakeScalingFactor);
    float yShake = sin((time + 0.5) * frequency * 3.14159) * (shakeIntensity * shakeScalingFactor);

    float distanceToEdge = min(uv.x, min(uv.y, min(1.0 - uv.x, 1.0 - uv.y)));
    float edgeFactor = saturate(distanceToEdge / shakeScalingFactor);
    float2 shake = float2(xShake, yShake) * edgeFactor;

    float2 sampledPos = uv + shake;
    sampledPos = saturate(sampledPos);
    sampledPos *= float2(textureWidth, textureHeight);

    float4 tempColor = inputTexture[sampledPos];
    Linear2Gamma(tempColor, tempColor);

    outputTexture[id.xy] = tempColor;
}
